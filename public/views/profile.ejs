<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Profile</title>
    <link rel="stylesheet" href="/styles/profile.css">
    <style>
        .profile-picture {
            width: 150px;
            height: 150px;
            border: 2px solid #ddd;
            display: flex;
            align-items: center;
            justify-content: center;
            overflow: hidden;
            border-radius: 5px;
            position: relative;
            background-color: #f9f9f9;
        }

        .edit-profile-picture {
            cursor: pointer;
        }

        /* "+" sign only for edit mode */
        .edit-profile-picture::before {
            content: '+';
            font-size: 48px;
            color: #aaa;
            position: absolute;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .profile-picture img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }/* Кнопка открытия/закрытия списка заказов */

.arrow {
    margin-left: 8px;
    font-size: 14px;
    transition: transform 0.3s ease;
}

/* Стиль для списка заказов */
.orders-list {
    margin: 20px 0;
    padding: 0;
    list-style: none;
    border: 1px solid #ddd;
    border-radius: 8px;
    background-color: #fff;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

/* Каждый заказ */
.order-item {
    padding: 15px 20px;
    border-bottom: 1px solid #eee;
}

.order-item:last-child {
    border-bottom: none;
}

.order-summary {
    margin-bottom: 15px;
}

.order-summary p {
    margin: 5px 0;
    font-size: 14px;
    color: #333;
}

/* Подробности заказа */
.order-details {
    list-style: none;
    padding-left: 20px;
    background-color: #f9f9f9;
    border: 1px solid #ddd;
    border-radius: 5px;
    padding: 10px;
}

.order-detail-item {
    margin-bottom: 10px;
}

.order-detail-item:last-child {
    margin-bottom: 0;
}

.order-detail-item p {
    margin: 3px 0;
    font-size: 13px;
    color: #555;
}

/* Сообщение "нет заказов" */
.no-orders-message {
    text-align: center;
    font-size: 16px;
    color: #888;
    padding: 20px;
}

/* Анимация раскрытия стрелки */
.orders-list[style*="display: block;"] + .arrow {
    transform: rotate(180deg);
}

    </style>
</head>
<body>    <h4><a href="/catalog">SupremeCoffee</a></h4>

    <!-- User Information View Mode -->
    <div id="userInfo">
        <div class="profile-picture">
            <img src="<%= user.imgPath.replace('public/', '/') %>" alt="User Avatar" id="userAvatar">
        </div>
        <h1>Добрый день, <%= user.name %>!</h1>
        <table>
            <tr><th>Имя:</th><td><%= user.name %></td></tr>
            <tr><th>Почта:</th><td><%= user.email %></td></tr>
            <tr><th>Пол:</th><td><%= user.sex %></td></tr>
            <tr><th>Роль:</th><td><%= user.roles.join(', ') %></td></tr>
        </table>
    </div>

    <!-- Edit Profile Form Mode -->
    <div id="editForm" style="display: none;">
        <form action="/api/users/profile/update" method="POST" enctype="multipart/form-data">
            <div class="profile-picture edit-profile-picture" onclick="triggerFileInput()">
                <img src="<%= user.imgPath.replace('public/', '/') %>" alt="User Avatar" id="editUserAvatar">
                <input type="file" id="imgInput" name="img" accept="image/*" style="display: none;" onchange="displaySelectedImage(event)">
            </div>
            <label>Изменить Имя:</label>
            <input type="text" name="name" value="<%= user.name %>"><br>

            <label>Изменить Почту:</label>
            <input type="email" name="email" value="<%= user.email %>"><br>


            <label>Изменить Пол:</label>
            <select name="sex" onchange="changeDefaultAvatar(this.value)">
                <option value="male" <%= user.sex === 'male' ? 'selected' : '' %>>Мужской</option>
                <option value="female" <%= user.sex === 'female' ? 'selected' : '' %>>Женский</option>
                <option value="other" <%= user.sex === 'other' ? 'selected' : '' %>>Другой</option>
            </select><br>

            <button type="submit">Сохранить Изменения</button>
        </form>
    </div>

    <button id="edit" onclick="toggleEditForm()">Edit</button>
    <br>
    <br>
    <button class="toggle-orders">
        <span>Ваши заказы</span>
        <span class="arrow">&#9660;</span>
      </button>
      <ul class="orders orders-list" style="display: none;">
        <% if (orders && orders.length > 0) { %>
          <% orders.forEach(order => { %>
            <li class="order-item">
                <div class="order-summary">
                      <p>Дата заказа: <%= new Date(order.orderDate).toLocaleDateString() %></p>
                      <p>Статус заказа: <%= order.status %></p>
                      <p>Общая цена покупки:<div style=" color: red;"> <%= order.totalSalePrice %> грн</div></p>
                </div>
                <ul class="order-details">
                <% order.items.forEach(item => { %>
                    <li class="order-detail-item">
                    <p>Кофе: <%= item.coffeeId.name %></p>
                    <p>Количество: <%= item.quantity %></p>
                    <p>Цена продажи за штуку: <%= item.salePrice %> ₽</p>
                  </li>
                <% }) %>
              </ul>
            </li>
          <% }) %>
        <% } else { %>
            <p class="orders-empty-message">У вас пока нет заказов.</p>
        <% } %>
      </ul>
      
      <script>
        document.querySelector('.toggle-orders').addEventListener('click', () => {
          const orderList = document.querySelector('.orders');
          orderList.style.display = orderList.style.display === 'none' ? 'block' : 'none';
        });
      </script>
    

   
    <script>
        // Toggle form visibility and user information display
        function toggleEditForm() {
            const userInfo = document.getElementById('userInfo');
            const editForm = document.getElementById('editForm');
            const editButton = document.getElementById('edit');

            if (editForm.style.display === 'none') {
                editForm.style.display = 'block';
                userInfo.style.display = 'none';
                editButton.innerText = 'Cancel';
            } else {
                editForm.style.display = 'none';
                userInfo.style.display = 'block';
                editButton.innerText = 'Edit';
            }
        }

        // Trigger file input click when profile picture in edit mode is clicked
        function triggerFileInput() {
            document.getElementById('imgInput').click();
        }

        // Display the selected image in the edit avatar and hide "+"
        function displaySelectedImage(event) {
            const img = document.getElementById('editUserAvatar');
            const file = event.target.files[0];

            if (file) {
                const reader = new FileReader();
                reader.onload = (e) => {
                    img.src = e.target.result;
                    img.style.display = 'block';
                    document.querySelector('.edit-profile-picture::before').style.display = 'none';
                };
                reader.readAsDataURL(file);
            }
        }

        // Update avatar based on selected gender (default image logic)
     
    </script>
</body>
</html>
